<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <!--
    Customize this policy to fit your own app's needs. For more guidance, please refer to the docs:
        https://cordova.apache.org/docs/en/latest/
    Some notes:
        * https://ssl.gstatic.com is required only on Android and is needed for TalkBack to function properly
        * Disables use of inline scripts in order to mitigate risk of XSS vulnerabilities. To change this:
            * Enable inline JS: add 'unsafe-inline' to default-src
    -->
    <meta http-equiv="Content-Security-Policy" content="default-src * 'unsafe-inline' 'unsafe-eval'">
    <!-- <meta http-equiv="Content-Security-Policy" content="default-src 'self' data: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;"> -->
    <meta name="format-detection" content="telephone=no">
    <meta name="msapplication-tap-highlight" content="no">
    <meta name="viewport" content="initial-scale=1, width=device-width, viewport-fit=cover">
    <!-- <meta name="color-scheme" content="light dark"> -->
    <script src="https://www.gstatic.com/firebasejs/10.3.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.3.0/firebase-database-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.3.0/firebase-auth-compat.js"></script>
    <script src="login_init.js"></script>
    <script src="https://www.gstatic.com/firebasejs/ui/6.1.0/firebase-ui-auth.js"></script>
    <link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/6.1.0/firebase-ui-auth.css" />
    <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic">
    <link rel="stylesheet" href="//cdn.rawgit.com/necolas/normalize.css/master/normalize.css">
    <link rel="stylesheet" href="//cdn.rawgit.com/milligram/milligram/master/dist/milligram.min.css">

    <!-- <script src="login_ui.js"></script> -->
    <!-- <script src="index.js"></script> -->
    <!-- <script src="cordova.js"></script> -->
      
    <script src="cordova_event.js"></script>
    <style>
      body, html {
        height: 100%;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .container {
        text-align: center;
      }
    </style>
  </head>
  <body>
    <div class="container app">
      <div id="deviceready" class="blink">
          <p class="event listening"></p>
          <p name="state" class="event received"></p>
          <div class="row">
          <div class="column column-50 column-offset-25">
            <h2>Lonely&nbspHeart</h2>
            <form id="login-form">
              <label for="emailInput">Email</label>
              <input type="email" id="emailInput" name="email">
              
              <label for="passwordInput">Password</label>
              <input type="password" id="passwordInput" name="pass">
              
              <button type="button" onclick="login()">Login / Sign In</button>
            </form>
          </div>
        </div>
      </div>
      <!-- <div id="firebaseui-auth-container"></div> -->
    </div>
  </body>
<script>
  latitude=0
  longitude=0

  function getCurrentLocation() {
    if ("geolocation" in navigator) {
      navigator.geolocation.getCurrentPosition((position) => {
        if(position.coords.latitude!=latitude || position.coords.longitude!=longitude) {  
          latitude  = position.coords.latitude
          longitude = position.coords.longitude 
          update()
        }
      }, (error) => {
        
      });
    } else {
      errorCallback(new Error("Geolocation is not supported by this browser."));
    }
  }
  function update() {
    // Get a reference to the database service
    const database = firebase.database();


    // Get the currently signed-in user
    const user = firebase.auth().currentUser;
    if (user) {
      // The user is signed in
      email= document.querySelector('[name="email"]').value
      // Get a reference to the users node
      const userRef = database.ref('users/'+ user.uid);
      firebase.database().ref('users/' + user.uid).set({
        email: email,
        // other user data
      });
      userRef.transaction((currentData) => {
        
        if (currentData === null || !currentData.email) {
          
          return { email: email };
        }
      });
      // Set the user's latitude and longitude values
      if(latitude)  userRef.child('latitude').set(37.79);
      if(longitude) userRef.child('longitude').set(-122.41);
    }
  }
  function login() {
    email= document.querySelector('[name="email"]').value
    password= document.querySelector('[name="pass"]').value
    state= document.querySelector('[name="state"]')
  firebase.auth().signInWithEmailAndPassword(email, password)
  .then((userCredential) => {
    // Signed in
    var user = userCredential.user;
    update()
    window.location="browse.htm"
    
    // ...
  })
  .catch((error) => {
    state.textContent=error.message.replace("Firebase: ", "").split('(')[0]
    firebase.auth().createUserWithEmailAndPassword(email, password)
      .then((userCredential) => {
        // Signed in 
        var user = userCredential.user;
        update()
        window.location="config.htm"
        // ...
      })
      .catch((error) => {

        state.textContent=error.message.replace("Firebase: ", "").split('(')[0]
        // ..
      });
  });
}
onload=function(){
  getCurrentLocation()
  setInterval(getCurrentLocation, 10000);
}
</script>
</html>


